/*
 ************************************************
 * 基本共用样式                                   *
 * 引入 reset                                    *
 * 引入 home                                     *
 * vars 在reset与home中继承                       *
 * @命名规范：                                    *
 *    1. 通用样式库,用 "面向属性" 的命名方式命名     *
 *        如： .pb8{padding-bottom:8px;}         *
 *             .mt-20{margin-top:-20px;}         *
 *    2. 模块样式,块样式、组件、用 "BEM" 的方式命名  *
 *        ●前面添加前缀, "模块/块/组件-"            *
 *    3. scss                                    *
 *        ●公共类用 `-` 连接符命名                 *
 *        ●非公共类用驼峰法命名                     *
 *        ●scss $var 变量用 `-` 连接符命名         *
 *        ●scss @minxin 私有变量 用 `_` 下划线开头  *
 *************************************************
 */
@charset "utf-8";
@import "reset";
@import "home";

.test{
    color: $color-main;
    @include bg-img('test.JPG');
}

/**
* 禁止鼠标事件
*/
.disable-hover{
	pointer-events: none;
}

// BEM的意思就是块（block）、元素（element）、修饰符（modifier）
.block{} // .block 代表了更高级别的抽象或组件。
.block__element{} // .block__element 代表.block的后代，用于形成一个完整的.block的整体。
.block--modifier{} // .block--modifier代表.block的不同状态或不同版本。
// 之所以使用两个连字符和下划线而不是一个，是为了让你自己的块可以用单个连字符来界定，如：
.site-search{} /* 块 */
.site-search__field{} /* 元素 */
.site-search--full{} /* 修饰符 */

/**
 * jquery $.box 弹窗样式
 */
.box-wrap {
    @include full-h-w();
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    position: fixed;
    content: "";
    background: rgba(0, 0, 0, 0.5);
    left: 0;
    top: 0;
    z-index: 999;

    .box-wrap__font {
        background: #fff;
        position: fixed;
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        min-width: 76%;
        border-radius: 15px;

        .box-wrap__font--tips {
            position: relative;

            &:after {
                content: '';
                display: block;
                width: 50px;
                height: 50px;
                margin: 5px auto;
            }

            &.tips_none{
                display: none;

                &+ p.box-content{
                    margin: 10px 0; // tips_none时增加一点外边距
                }
            }

            &.tips_answer:after {
                //background: url(../img/pop_answer.png);
                @include bg-img('test.JPG');
                background-size: cover;
            }

            &.tips_error:after {
                background: url(../img/pop_error.png);
                background-size: cover;
            }

            &.tips_success:after {
                background: url(../img/pop_success.png);
                background-size: cover;
            }
        }

        .box-wrap__font--content {
            text-align: center;
            font-size: 1.5rem;
            padding: 20px 0;
        }

        .box-wrap__font--btnGroup {
            display: -webkit-box;
            display: -webkit-flex;
            display: -ms-flexbox;
            display: flex;
            border-top: 1px solid #e5e5e5;

            [data-name="btn"] {
                -webkit-box-flex: 1;
                -webkit-flex: 1;
                -ms-flex: 1;
                flex: 1;
                text-align: center;
                color: #000;
                padding: 10px;
                font-size: 1.5rem;

                &:nth-child(2) {
                    border-left: 1px solid #e5e5e5;
                    box-sizing: border-box;
                }
            }
        }
    }
}

/**
 * multiply CSS
 */
// 块状元素水平居中
.auto{margin-left:auto; margin-right:auto;}
// 清除浮动
.fix{*zoom:1;}
.fix:after{display:table; content:''; clear:both;}
// 基于display:table-cell的自适应布局
.cell{display:table-cell; *display:inline-block; width:2000px; *width:auto;}
// 双栏自适应cell部分连续英文字符换行
.cell_bk{display:table; width:100%; table-layout:fixed; word-wrap:break-word;}
// 单行文字溢出虚点显示
.ell{text-overflow:ellipsis; white-space:nowrap; overflow:hidden;}